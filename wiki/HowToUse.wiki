#summary Describes how to setup and run 2D/3D fluid solver, visualize results.

= Setup =

Requirements:
 * Windows XP/Vista/7
 * Visual Studio 2008
 * CUDA toolkit 4.0

Main solutions:
 * \trunk\src\FluidSolver2D.sln for 2D solver <br>
 * \trunk\src\FluidSolver3D.sln for 3D solver <br>

After building corresponding solutions you should get all executables in \trunk\bin\Release or \trunk\bin\Debug folders.

= How to Run =

Use Release executables for large tests.

 * 2D solver
<code> FluidSolver2D <data file> <output file> <config file> </code>
 {{{<data file>}}} - represents input data file with initial and boundary condifitions <br>
 {{{<output file>}}} - will contain results in specified format <br>
 {{{<config file>}}} - used for different parameters of the solver/grids/formats/etc <br>
 
 * 3D solver
<code> FluidSolver3D <data file> <project name> <config file> {{{[GPU] [align] [transpose]}}} </code>
 {{{<data file>}}}  - represents input data file with initial and boundary condifitions <br>
 {{{<project name>}}}  - results are stored in <project name>{{{_}}}res.nc using specified format, the grid is saved in <project name>{{{_}}}3d folder <br>
 {{{<config file>}}}  - used for different parameters of the solver/grids/formats/etc <br>
 {{{[GPU]}}}  - (optional) use GPU hardware instead of CPU <br>
 {{{[align]}}}  - (optional) align grid sizes to be multiple of 32 <br>
 {{{[transpose]}}}  - (optional) transpose data arrays, GPU-specific optimization<br>

= Sample Command Lines =

<code> FluidSolver2D ..\..\data\2D\box_pipe\box_pipe_data.txt output.txt ..\..\data\2D\box_pipe\box_pipe_config.txt </code>
Runs a 2D solver on CPU for a sample 2D box_pipe test with the corresponding configuration file. <br> <code> FluidSolver3D ..\..\data\3D\example_tests\box_pipe\box_pipe_2D_data.txt box_pipe_example ..\..\data\3D\example_tests\box_pipe\box_pipe_2D_config.txt align GPU transpose</code>
Runs a 3D solver on GPU for an example test that uses box pipe 2D model extruded along Z direction with corresponding configuration file, also using aligned grids and GPU-only transpose optimization.

There are a couple of example bat files you can run once you build the project. These batch files test simple scenarios in data folder and usually take just a few minutes to complete:
<code> trunk\bin\Release\run_examples_CPU.bat
trunk\bin\Release\run_examples_GPU.bat </code>

Also you can run full large white sea test on CPU/GPU with the following bat files in svn. Please note that this will run much longer since it uses high-res grids and more time steps for better results.
<code> trunk\bin\Release\run_white_sea_CPU.bat
trunk\bin\Release\run_white_sea_GPU.bat </code>

= How to Visualize =

Both 2D and 3D solvers can output axis and variables data (velocity and temperature) in standard NetCDF binary format. <br>
This format is wide-known and supported in many scientific data visualization programs.

 